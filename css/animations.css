/* ========================================
   アニメーション - ブラックジャック練習アプリ
   ======================================== */

/* ========================================
   キーフレーム定義
   ======================================== */

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes slideInFromLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInFromRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInFromTop {
    from {
        transform: translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInFromBottom {
    from {
        transform: translateY(100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes cardFlip {
    0% {
        transform: rotateY(0deg);
    }
    50% {
        transform: rotateY(-90deg);
    }
    100% {
        transform: rotateY(0deg);
    }
}

@keyframes cardDeal {
    0% {
        transform: translateX(-200px) translateY(-50px) rotate(-15deg);
        opacity: 0;
    }
    50% {
        opacity: 0.8;
    }
    100% {
        transform: translateX(0) translateY(0) rotate(0deg);
        opacity: 1;
    }
}

@keyframes cardReveal {
    0% {
        transform: rotateY(180deg);
    }
    100% {
        transform: rotateY(0deg);
    }
}

@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        transform: translate3d(0, -10px, 0);
    }
    70% {
        transform: translate3d(0, -5px, 0);
    }
    90% {
        transform: translate3d(0, -2px, 0);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 5px var(--color-secondary);
    }
    50% {
        box-shadow: 0 0 20px var(--color-secondary), 0 0 30px var(--color-secondary);
    }
}

@keyframes sparkle {
    0%, 100% {
        opacity: 0;
        transform: scale(0) rotate(0deg);
    }
    50% {
        opacity: 1;
        transform: scale(1) rotate(180deg);
    }
}

/* ========================================
   カードアニメーション基本クラス
   ======================================== */

.card {
    position: relative;
    width: 70px;
    height: 100px;
    background: white;
    border: 1px solid #ccc;
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-card);
    transform-style: preserve-3d;
    transition: all var(--transition-base);
    cursor: pointer;
    backface-visibility: hidden;
}

.card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: var(--radius-md);
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: var(--font-weight-bold);
    color: var(--color-text-dark);
}

.card-front {
    background: white;
    border: 2px solid #333;
}

.card-back {
    background: linear-gradient(135deg, #1a472a 0%, #2d5a3d 100%);
    border: 2px solid var(--color-secondary);
}

.card-back::before {
    content: '';
    position: absolute;
    top: 10%;
    left: 10%;
    right: 10%;
    bottom: 10%;
    background: repeating-linear-gradient(
        45deg,
        var(--color-secondary),
        var(--color-secondary) 3px,
        transparent 3px,
        transparent 8px
    );
    border-radius: var(--radius-sm);
    opacity: 0.5;
}

/* ========================================
   カードアニメーションクラス
   ======================================== */

.card--dealing {
    animation: cardDeal 0.6s ease-out forwards;
}

.card--flipping {
    animation: cardFlip 0.6s ease-in-out forwards;
}

.card--revealing {
    animation: cardReveal 0.4s ease-in-out forwards;
}

.card--highlighted {
    animation: glow 1.5s ease-in-out infinite;
}

.card--bounce {
    animation: bounce 0.6s ease-in-out;
}

.card--shake {
    animation: shake 0.5s ease-in-out;
}

.card--pulse {
    animation: pulse 1s ease-in-out infinite;
}

/* ========================================
   UI要素アニメーション
   ======================================== */

.fade-in {
    animation: fadeIn 0.3s ease-in-out;
}

.fade-out {
    animation: fadeOut 0.3s ease-in-out;
}

.slide-in-left {
    animation: slideInFromLeft 0.4s ease-out;
}

.slide-in-right {
    animation: slideInFromRight 0.4s ease-out;
}

.slide-in-top {
    animation: slideInFromTop 0.4s ease-out;
}

.slide-in-bottom {
    animation: slideInFromBottom 0.4s ease-out;
}

/* ========================================
   ゲーム状態アニメーション
   ======================================== */

.game-info--updating .value {
    animation: pulse 0.3s ease-in-out;
}

.feedback-area--correct {
    background: linear-gradient(135deg, var(--color-success) 20%, var(--color-primary) 100%);
    animation: bounce 0.6s ease-in-out;
}

.feedback-area--incorrect {
    background: linear-gradient(135deg, var(--color-error) 20%, var(--color-primary) 100%);
    animation: shake 0.5s ease-in-out;
}

.control-btn--winning {
    animation: glow 1s ease-in-out infinite;
}

/* ========================================
   ローディングアニメーション
   ======================================== */

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top: 4px solid var(--color-secondary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.loading-dots {
    display: inline-flex;
    gap: 4px;
}

.loading-dots span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--color-secondary);
    animation: loadingDots 1.4s ease-in-out infinite both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }
.loading-dots span:nth-child(3) { animation-delay: 0s; }

@keyframes loadingDots {
    0%, 80%, 100% {
        transform: scale(0.8);
        opacity: 0.5;
    }
    40% {
        transform: scale(1.2);
        opacity: 1;
    }
}

/* ========================================
   パーティクルエフェクト
   ======================================== */

.sparkle-effect {
    position: relative;
    overflow: visible;
}

.sparkle-effect::before {
    content: '✨';
    position: absolute;
    top: -10px;
    right: -10px;
    font-size: 20px;
    animation: sparkle 2s ease-in-out infinite;
    pointer-events: none;
}

.success-effect {
    position: relative;
}

.success-effect::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, var(--color-success) 0%, transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    animation: successPulse 0.6s ease-out;
    pointer-events: none;
}

@keyframes successPulse {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0.8;
    }
    100% {
        transform: translate(-50%, -50%) scale(2);
        opacity: 0;
    }
}

/* ========================================
   ホバーエフェクト（デスクトップ用）
   ======================================== */

@media (hover: hover) {
    .card:hover {
        transform: translateY(-5px) scale(1.05);
        box-shadow: var(--shadow-lg);
    }
    
    .control-btn:hover::before {
        animation: shimmer 0.6s ease-in-out;
    }
    
    @keyframes shimmer {
        0% {
            transform: translateX(-100%) skewX(-15deg);
        }
        100% {
            transform: translateX(200%) skewX(-15deg);
        }
    }
}

/* ========================================
   タッチデバイス用調整
   ======================================== */

@media (hover: none) and (pointer: coarse) {
    .card:active {
        transform: scale(0.95);
    }
    
    .control-btn:active {
        transform: scale(0.98);
    }
}

/* ========================================
   アニメーション制御ユーティリティ
   ======================================== */

.animation-paused {
    animation-play-state: paused !important;
}

.animation-fast {
    animation-duration: 0.15s !important;
}

.animation-slow {
    animation-duration: 0.8s !important;
}

.no-animation * {
    animation: none !important;
    transition: none !important;
}

/* ========================================
   レスポンシブアニメーション調整
   ======================================== */

@media (max-width: 576px) {
    .card {
        width: 60px;
        height: 85px;
    }
    
    .card--dealing {
        animation-duration: 0.4s;
    }
    
    .card--flipping {
        animation-duration: 0.4s;
    }
}

@media (min-width: 1024px) {
    .card {
        width: 80px;
        height: 115px;
    }
    
    .card--dealing {
        animation-duration: 0.8s;
    }
}

/* ========================================
   アクセシビリティ対応
   ======================================== */

/* アニメーション削減設定への対応 */
@media (prefers-reduced-motion: reduce) {
    .card--dealing,
    .card--flipping,
    .card--revealing,
    .card--bounce,
    .card--shake {
        animation: none !important;
    }
    
    .card {
        transition: none !important;
    }
    
    .control-btn,
    .nav-btn {
        transition: background-color 0.1s ease !important;
    }
    
    .feedback-area {
        transition: opacity 0.1s ease !important;
    }
}

/**
 * カードアニメーション
 * Phase 3: 本格実装 - カード演出システム
 */

/* ==========================================================================
   カードフリップアニメーション（3D効果）
   ========================================================================== */

/* カードフリップコンテナ */
.card-flip-container {
    perspective: 1000px;
    transform-style: preserve-3d;
}

/* フリップアニメーション本体 */
.card--flipping {
    transition: transform 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);
    transform-style: preserve-3d;
}

/* フリップ中間状態（90度回転） */
.card--flip-halfway {
    transform: rotateY(90deg);
}

/* フリップ完了状態 */
.card--flipped {
    transform: rotateY(180deg);
}

/* フリップエフェクト - 基本 */
@keyframes cardFlip {
    0% {
        transform: rotateY(0deg);
    }
    50% {
        transform: rotateY(90deg);
    }
    100% {
        transform: rotateY(180deg);
    }
}

/* フリップエフェクト - 裏から表 */
@keyframes cardReveal {
    0% {
        transform: rotateY(180deg) scale(1);
    }
    50% {
        transform: rotateY(90deg) scale(1.05);
    }
    100% {
        transform: rotateY(0deg) scale(1);
    }
}

/* ==========================================================================
   カード配布アニメーション
   ========================================================================== */

/* カード配布 - デッキから手札への移動 */
@keyframes cardDeal {
    0% {
        transform: translateX(-200px) translateY(-100px) scale(0.8) rotateZ(-10deg);
        opacity: 0;
    }
    30% {
        transform: translateX(-100px) translateY(-50px) scale(0.9) rotateZ(-5deg);
        opacity: 0.7;
    }
    70% {
        transform: translateX(-20px) translateY(-10px) scale(1.05) rotateZ(2deg);
        opacity: 0.9;
    }
    100% {
        transform: translateX(0) translateY(0) scale(1) rotateZ(0deg);
        opacity: 1;
    }
}

/* プレイヤーカード配布（下から上へ） */
@keyframes cardDealToPlayer {
    0% {
        transform: translateY(150px) scale(0.8) rotateZ(5deg);
        opacity: 0;
    }
    50% {
        transform: translateY(50px) scale(1.1) rotateZ(2deg);
        opacity: 0.8;
    }
    100% {
        transform: translateY(0) scale(1) rotateZ(0deg);
        opacity: 1;
    }
}

/* ディーラーカード配布（上から下へ） */
@keyframes cardDealToDealer {
    0% {
        transform: translateY(-150px) scale(0.8) rotateZ(-5deg);
        opacity: 0;
    }
    50% {
        transform: translateY(-50px) scale(1.1) rotateZ(-2deg);
        opacity: 0.8;
    }
    100% {
        transform: translateY(0) scale(1) rotateZ(0deg);
        opacity: 1;
    }
}

/* ==========================================================================
   ゲーム結果アニメーション
   ========================================================================== */

/* 勝利アニメーション */
@keyframes victoryGlow {
    0%, 100% {
        box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);
        transform: scale(1);
    }
    50% {
        box-shadow: 0 0 30px rgba(76, 175, 80, 0.8), 0 0 60px rgba(76, 175, 80, 0.4);
        transform: scale(1.02);
    }
}

/* 敗北アニメーション */
@keyframes defeatShake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
    20%, 40%, 60%, 80% { transform: translateX(3px); }
}

/* ブラックジャックアニメーション */
@keyframes blackjackCelebration {
    0% {
        transform: scale(1) rotate(0deg);
        box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
    }
    25% {
        transform: scale(1.1) rotate(2deg);
        box-shadow: 0 0 40px rgba(255, 215, 0, 0.8);
    }
    50% {
        transform: scale(1.2) rotate(-2deg);
        box-shadow: 0 0 60px rgba(255, 215, 0, 1);
    }
    75% {
        transform: scale(1.1) rotate(1deg);
        box-shadow: 0 0 40px rgba(255, 215, 0, 0.8);
    }
    100% {
        transform: scale(1) rotate(0deg);
        box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
    }
}

/* ==========================================================================
   インタラクションアニメーション
   ========================================================================== */

/* カードホバー効果 */
@keyframes cardHover {
    0% {
        transform: translateY(0) scale(1);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }
    100% {
        transform: translateY(-5px) scale(1.05);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }
}

/* ボタンクリックアニメーション */
@keyframes buttonPress {
    0% { transform: scale(1); }
    50% { transform: scale(0.95); }
    100% { transform: scale(1); }
}

/* パルスアニメーション（重要な要素用） */
@keyframes pulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
}

/* 光る効果（ハイライト用） */
@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
    }
    50% {
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 30px rgba(255, 255, 255, 0.4);
    }
}

/* ==========================================================================
   アニメーション適用クラス
   ========================================================================== */

/* カードアニメーション適用 */
.card--dealing {
    animation: cardDeal 0.8s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

.card--dealing-to-player {
    animation: cardDealToPlayer 0.6s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

.card--dealing-to-dealer {
    animation: cardDealToDealer 0.6s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

.card--revealing {
    animation: cardReveal 0.8s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

.card--hovering {
    animation: cardHover 0.3s ease-out forwards;
}

/* ゲーム結果アニメーション適用 */
.card--victory {
    animation: victoryGlow 1.5s ease-in-out infinite;
}

.card--defeat {
    animation: defeatShake 0.5s ease-in-out;
}

.card--blackjack {
    animation: blackjackCelebration 2s ease-in-out infinite;
}

/* インタラクションアニメーション適用 */
.card--highlighted {
    animation: glow 2s ease-in-out infinite;
}

.btn--pressed {
    animation: buttonPress 0.2s ease-out;
}

.stat--updating {
    animation: pulse 0.5s ease-in-out;
}

/* ==========================================================================
   レスポンシブ調整
   ========================================================================== */

/* モバイル向け軽量化 */
@media (max-width: 768px) {
    .card--dealing {
        animation-duration: 0.6s;
    }
    
    .card--revealing {
        animation-duration: 0.6s;
    }
    
    /* タッチデバイスではホバー効果を無効化 */
    @media (hover: none) {
        .card--hovering {
            animation: none;
        }
    }
}

/* 高パフォーマンスデバイス向け */
@media (min-width: 1200px) {
    .card--dealing {
        animation-duration: 1s;
    }
    
    .card--blackjack {
        animation-duration: 3s;
    }
}

/* ==========================================================================
   アクセシビリティ対応
   ========================================================================== */

/* アニメーションを無効にするユーザー向け */
@media (prefers-reduced-motion: reduce) {
    .card--dealing,
    .card--revealing,
    .card--hovering,
    .card--victory,
    .card--defeat,
    .card--blackjack,
    .card--highlighted,
    .btn--pressed,
    .stat--updating {
        animation: none !important;
        transition: none !important;
    }
    
    /* 最小限の視覚フィードバックは維持 */
    .card--victory {
        box-shadow: 0 0 10px rgba(76, 175, 80, 0.5) !important;
    }
    
    .card--defeat {
        box-shadow: 0 0 10px rgba(244, 67, 54, 0.5) !important;
    }
    
    .card--blackjack {
        box-shadow: 0 0 20px rgba(255, 215, 0, 0.7) !important;
    }
}

/* ==========================================================================
   パフォーマンス最適化
   ========================================================================== */

/* GPUアクセラレーション強制 */
.card {
    will-change: transform, opacity;
    backface-visibility: hidden;
    transform: translateZ(0);
}

/* アニメーション中の要素はレイヤー分離 */
.card--dealing,
.card--revealing,
.card--hovering {
    will-change: transform, opacity;
    contain: layout style paint;
}

/* アニメーション終了後はwill-changeをリセット */
.card--animation-complete {
    will-change: auto;
} 